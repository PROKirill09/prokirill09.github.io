{"version":3,"sources":["panels/Home.js","panels/Persik.js","img/persik.png","App.js","index.js"],"names":["Home","id","fetchedUser","go","header","mode","before","photo_200","src","description","city","title","first_name","last_name","stretched","size","onClick","a","bridge","send","ad_format","result","Persik","props","left","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"wOAmDeA,EA5CF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAQC,GAAX,EAAOC,GAAP,EAAWD,aAAX,OACZ,eAAC,IAAD,CAAOD,GAAIA,EAAX,UACC,iCAAQ,cAAC,IAAD,gGACPC,GACD,cAAC,IAAD,CAAOE,OAAQ,cAAC,IAAD,CAAQC,KAAK,YAAb,iFAAf,SACC,eAAC,IAAD,CACCC,OAAQJ,EAAYK,UAAY,cAAC,IAAD,CAAQC,IAAKN,EAAYK,YAAe,KACxEE,YAAaP,EAAYQ,MAAQR,EAAYQ,KAAKC,MAAQT,EAAYQ,KAAKC,MAAQ,GAFpF,oBAIKT,EAAYU,WAJjB,YAI+BV,EAAYW,WAAY,4BAIxD,cAAC,IAAD,CAAOT,OAAQ,cAAC,IAAD,CAAQC,KAAK,YAAb,yGAAf,SACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAQS,WAAS,EAACC,KAAK,IAAIV,KAAK,YAAYW,QAAO,sBAAE,sBAAAC,EAAA,sEACtCC,IAAOC,KAAK,wBAAyB,CAACC,UAAU,WADV,cAEjDC,OAFiD,2CAArD,6HCIWC,GC1BA,I,ODQA,SAAAC,GAAK,OACnB,eAAC,IAAD,CAAOtB,GAAIsB,EAAMtB,GAAjB,UACC,iCAAQ,cAAC,IAAD,CACPuB,KAAM,cAAC,IAAD,CAAiBR,QAASO,EAAMpB,GAAI,UAAQ,SAD3C,iEAKR,cAAC,IAAD,CAAOC,OAAQ,cAAC,IAAD,CAAQC,KAAK,YAAb,kCAAf,yDE8BaoB,EArCH,WACX,MAAsCC,mBAAS,QAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA+BF,mBAAS,MAAxC,mBAAOxB,EAAP,KAAoB2B,EAApB,KACA,EAA4BH,mBAAS,cAAC,IAAD,CAAeX,KAAK,WAAzD,mBAAOe,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WAAM,4CAQf,4BAAAf,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOc,EADP,OAECJ,EAAQI,GACRF,EAAU,MAHX,4CARe,sBACfb,IAAOgB,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAEH,IAAM3C,EAAK,SAAA4C,GACVnB,EAAemB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,eAAC,IAAD,CAAMvB,YAAaA,EAAaG,OAAQA,EAAxC,UACC,cAAC,EAAD,CAAM7B,GAAG,OAAOC,YAAaA,EAAaC,GAAIA,IAC9C,cAAC,EAAD,CAAQF,GAAG,SAASE,GAAIA,YChC7Be,IAAOC,KAAK,eAAgB,IAE5BD,IAAOC,KAAK,gBAEZgC,IAASC,OAAO,cAAC,EAAD,IAASb,SAASc,eAAe,W","file":"static/js/main.0ed0086f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport bridge from \"@vkontakte/vk-bridge\";\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar, Snackbar } from '@vkontakte/vkui';\nlet reklams = 0\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<center><PanelHeader>Смотри рекламу</PanelHeader></center>\n\t\t{fetchedUser &&\n\t\t<Group header={<Header mode=\"secondary\">Твой профиль</Header>}>\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}<br/>\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group header={<Header mode=\"secondary\">Кнопки навигации</Header>}>\n\t\t\t<Div>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={async () => {\nconst test = await bridge.send(\"VKWebAppShowNativeAds\", {ad_format:\"reward\"});\nif(test.result == true) {\n\n} else {\n\n}\n\n}}>\n\t\t\t\t\tПосмотреть рекламу\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, PanelHeaderBack, Header, Button, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<center><PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n\t\t\tНаши боты\n\t\t</PanelHeader></center>\n\t\t<Group header={<Header mode=\"secondary\">Бот 1</Header>}>\n\t\t\t\t   Группа 1\n\t\t</Group>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\nimport '@vkontakte/vkui';\n \nbridge.send(\"VKWebAppInit\", {});\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}